service: reviews-api

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-mocha-plugin

custom: ${file(../../serverless.common.yml):custom}

package:
  individually: true

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: eu-central-1

  environment:
    stage: ${self:custom.stage}

  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:Scan
        - dynamodb:PutItem
      Resource:
        - 'Fn::ImportValue': ${self:custom.stage}-ReviewsTableArn
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
        - s3:GetObject
        - s3:GetObjectAcl
      Resource:
        - Fn::Join: ["/", [Fn::ImportValue: "${self:custom.stage}-ReviewsBucketArn", "*"]]

functions:
  create:
    handler: handlers/create/index.handler
    events:
      - http:
          path: reviews
          method: post
          cors: true
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer
  list:
    handler: get.getAll
    events:
      - http:
          path: reviews
          method: get
          cors: true
          authorizers: aws_iam
resources:
  - ${file(resources/api-gateway-errors.yml)}
  - ${file(resources/cognito-authorizer.yml)}

  - Outputs:
      ApiGatewayRestApiId:
        Value:
          Ref: ApiGatewayRestApi
        Export:
          Name: ${self:custom.stage}-ApiGatewayRestApiId
      
      ApiGatewayRestApiRootResourceId:
        Value:
          Fn::GetAtt:
            - ApiGatewayRestApi
            - RootResourceId
        Export:
          Name: ${self:custom.stage}-ApiGatewayRestApiRootResourceId